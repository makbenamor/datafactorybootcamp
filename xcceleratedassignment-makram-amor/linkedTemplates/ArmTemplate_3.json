{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "xcceleratedassignment-makram-amor"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/surrogate_key')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "a uniquely identifier number",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inputblob_new_users",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "inputblob_new_users_purchases",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "surrogateKey1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          user_id as integer,",
						"          first_name as string,",
						"          last_name as string,",
						"          age as short,",
						"          gender as string,",
						"          country as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          user_id as integer,",
						"          purchase_amount as string,",
						"          purchase_date as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1, source2 join(source1@user_id == source2@user_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          user_id = source1@user_id,",
						"          first_name,",
						"          last_name,",
						"          age,",
						"          gender,",
						"          country,",
						"          email,",
						"          purchase_amount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"sort1 keyGenerate(output(another_user_id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"select1 sort(desc(purchase_amount, true)) ~> sort1",
						"surrogateKey1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          user_id = another_user_id,",
						"          first_name,",
						"          last_name,",
						"          age,",
						"          gender,",
						"          country,",
						"          email,",
						"          purchase_amount",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/window and pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "a uniquely identifier number",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "inputblob_new_users",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "inputblob_new_users_purchases",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "window1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          user_id as integer,",
						"          first_name as string,",
						"          last_name as string,",
						"          age as short,",
						"          gender as string,",
						"          country as string,",
						"          email as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source(output(",
						"          user_id as integer,",
						"          purchase_amount as double,",
						"          purchase_date as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1, source2 join(source1@user_id == source2@user_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          user_id = source1@user_id,",
						"          first_name,",
						"          last_name,",
						"          age,",
						"          gender,",
						"          country,",
						"          email,",
						"          user_id = source2@user_id,",
						"          purchase_amount,",
						"          purchase_date",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 window(over(user_id),",
						"     asc(purchase_date, true),",
						"     running_total = sum( purchase_amount)) ~> window1",
						"window1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure databricks to SQL server')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('the_names')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "azureblobstorage_staging",
												"type": "LinkedServiceReference"
											},
											"path": "staging-container",
											"enableCompression": true
										},
										"parallelCopies": 10
									},
									"inputs": [
										{
											"referenceName": "AzureDatabricksDeltaLakeDataset1",
											"type": "DatasetReference",
											"parameters": {
												"table_name": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "on_premdb_races",
											"type": "DatasetReference",
											"parameters": {
												"sql_table_name": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "the_names",
							"value": [
								"circuits",
								"constructors",
								"drivers",
								"races",
								"pitstops",
								"qualifying",
								"laptimes",
								"results"
							]
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[delete_from_all_tables]"
						},
						"linkedServiceName": {
							"referenceName": "onpremserver",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"the_names": {
						"type": "Array",
						"defaultValue": [
							"circuits",
							"constructors",
							"drivers",
							"races",
							"pitstops",
							"qualifying",
							"laptimes",
							"results"
						]
					},
					"circuits": {
						"type": "String"
					}
				},
				"folder": {
					"name": "my tutorials"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure databricks to SQL server_laptimes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[delete_from_all_tables]"
						},
						"linkedServiceName": {
							"referenceName": "onpremserver",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "azureblobstorage_staging",
									"type": "LinkedServiceReference"
								},
								"path": "staging-container",
								"enableCompression": true
							},
							"parallelCopies": 10,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "race_id",
											"type": "Int"
										},
										"sink": {
											"name": "race_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "driver_id",
											"type": "Int"
										},
										"sink": {
											"name": "driver_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "lap",
											"type": "Int"
										},
										"sink": {
											"name": "lap",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "position",
											"type": "Int"
										},
										"sink": {
											"name": "position",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "time",
											"type": "String"
										},
										"sink": {
											"name": "lap_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "milliseconds",
											"type": "Int"
										},
										"sink": {
											"name": "milliseconds",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "laptimes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "on_premdb_races",
								"type": "DatasetReference",
								"parameters": {
									"sql_table_name": "laptimes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"the_names": {
						"type": "Array",
						"defaultValue": [
							"laptimes"
						]
					},
					"circuits": {
						"type": "String"
					}
				},
				"folder": {
					"name": "my tutorials"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure databricks to SQL server_races')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "delete from dbo.races",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "azureblobstorage_staging",
									"type": "LinkedServiceReference"
								},
								"path": "staging-container",
								"enableCompression": true
							},
							"parallelCopies": 10,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "race_id",
											"type": "Int"
										},
										"sink": {
											"name": "race_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "race_year",
											"type": "Int"
										},
										"sink": {
											"name": "race_year",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "round",
											"type": "Int"
										},
										"sink": {
											"name": "round",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "circuit_id",
											"type": "Int"
										},
										"sink": {
											"name": "circuit_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ingestion_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "race_datetime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "race_timestamp",
											"type": "DateTime"
										},
										"sink": {
											"name": "race_timestamp",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "races"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "on_premdb_races",
								"type": "DatasetReference",
								"parameters": {
									"sql_table_name": "races"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"the_names": {
						"type": "Array",
						"defaultValue": [
							"laptimes"
						]
					},
					"circuits": {
						"type": "String"
					}
				},
				"folder": {
					"name": "my tutorials"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure databricks to SQL server_results')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "delete from dbo.results",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "azureblobstorage_staging",
									"type": "LinkedServiceReference"
								},
								"path": "staging-container",
								"enableCompression": true
							},
							"parallelCopies": 10,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "result_id",
											"type": "Int64"
										},
										"sink": {
											"name": "result_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "constructor_id",
											"type": "Int64"
										},
										"sink": {
											"name": "constructor_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "driver_id",
											"type": "Int64"
										},
										"sink": {
											"name": "driver_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "fastest_lap",
											"type": "String"
										},
										"sink": {
											"name": "fastest_lap",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fastest_lap_speed",
											"type": "String"
										},
										"sink": {
											"name": "fastest_lap_speed",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fastest_lap_time",
											"type": "String"
										},
										"sink": {
											"name": "fastest_lap_time",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "grid",
											"type": "Int64"
										},
										"sink": {
											"name": "grid",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "laps",
											"type": "Int64"
										},
										"sink": {
											"name": "laps",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "milliseconds",
											"type": "String"
										},
										"sink": {
											"name": "milliseconds",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "number",
											"type": "String"
										},
										"sink": {
											"name": "number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "points",
											"type": "Double"
										},
										"sink": {
											"name": "points",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "position",
											"type": "String"
										},
										"sink": {
											"name": "position",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "position_order",
											"type": "Int64"
										},
										"sink": {
											"name": "position_order",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "position_text",
											"type": "String"
										},
										"sink": {
											"name": "position_text",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "race_id",
											"type": "Int64"
										},
										"sink": {
											"name": "race_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "rank",
											"type": "String"
										},
										"sink": {
											"name": "rank",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "statusId",
											"type": "Int64"
										},
										"sink": {
											"name": "statusId",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "time",
											"type": "String"
										},
										"sink": {
											"name": "time",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "AzureDatabricksDeltaLakeDataset1",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "results"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "on_premdb_races",
								"type": "DatasetReference",
								"parameters": {
									"sql_table_name": "results"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"the_names": {
						"type": "Array",
						"defaultValue": [
							"laptimes"
						]
					},
					"circuits": {
						"type": "String"
					}
				},
				"folder": {
					"name": "my tutorials"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute data flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "rule based mapping",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink2": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/convert array to string in adf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "concat pipelines variables to have a valid array of values",
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set makers",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "car_makers",
										"value": {
											"value": "@concat(variables('list_car_makers'),', ',item().make )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set makers",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "list_car_makers",
										"value": {
											"value": "@variables('car_makers')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"car_makers": {
						"type": "String"
					},
					"list_car_makers": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/local file to blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Length",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Length",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "on_premcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "cloudcsvfolderinput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trainings"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/local file to on-prem db')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Make",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Make",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Origin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Origin",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DriveTrain",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Length",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Length",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "on_premcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "on_premdb",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trainings"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}